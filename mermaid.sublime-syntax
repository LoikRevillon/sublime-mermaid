%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: Mermaid
file_extensions:
  - mermaid
scope: source.mermaid
variables:
  link: "--(?:-|\\>)"
  node: \b\S+\b
  node_from: ^\s*{{node}}\s?
  node_to: \s?{{node}}\b
  text: .+
contexts:
  prototype:
    - include: line_comment

  main:
    - match: <
      push:
        - meta_scope: punctuation.definition.comment.mermaid.html
        - match: $
          pop: true

    - include: quoted_string

    - match: '^\s*(class)\s+{{node}}\s+'
      captures:
        1: keyword.type.styling.mermaid
      push:
        - meta_scope: meta.declaration.graph.styling.mermaid
        - match: \b\w+\b
          scope: entity.name.class.styling.mermaid
        - match: $
          pop: true

    - match: '^\s*(click)\s+{{node}}\s+'
      captures:
        1: keyword.type.interaction.mermaid
      push:
        - meta_scope: meta.declaration.graph.interaction.mermaid
        - match: \b\w+\b
          scope: entity.name.callback.interaction.mermaid
        - include: quoted_string
        - match: $
          pop: true

    - match: ^\s*(graph)\s+
      captures:
        1: keyword.type.main.mermaid
      push:
        - meta_scope: meta.declaration.graph.mermaid
        - match: \b(T(B|D)|BT|LR|RL)\b
          scope: constant.type.graph.mermaid
        - match: $
          pop: true

    - match: ^\s*(subgraph)\s+({{text}})$
      captures:
        1: keyword.type.group.begin.mermaid
        2: string.text.subgraph.mermaid
      push:
        - meta_scope: meta.declaration.subgraph.mermaid
        - include: main
        - match: ^\s*end\b
          scope: keyword.type.group.end.mermaid
          pop: true

    - match: "{{node_from}}({{link}})"
      captures:
        1: keyword.operator.link.mermaid
      push:
        - meta_scope: meta.declaration.graph.link.mermaid
        - match: "(\\|)({{text}})(\\|)"
          captures:
            1: keyword.operator.link.text.begin.mermaid
            2: string.text.link.mermaid
            3: keyword.operator.link.text.end.mermaid
        - match: "\\s?({{text}})\\s?({{link}})"
          captures:
            1: string.text.link.mermaid
            2: keyword.operator.link.mermaid
        - match: '{{node_to}}'
          pop: true

    - match: "^\\s*({{node}})(\\[|\\(+|\\>|\\{)"
      captures:
        1: entity.name.node.mermaid
        2: keyword.operator.node.begin.mermaid
      push:
        - meta_scope: meta.declaration.graph.node.mermaid
        - meta_content_scope: string.text.node.mermaid
        - match: "(\\]|\\)+|\\})(\\b|\\s)"
          captures:
            1: keyword.operator.node.end.mermaid
          pop: true

  line_comment:
    - match: '%%'
      push:
        - meta_scope: punctuation.definition.comment.mermaid
        - match: $
          pop: true

  quoted_string:
    - match: '"'
      scope: punctuation.definition.string.begin.mermaid
      push:
        - meta_scope: string.quoted.double.mermaid
        - match: '"'
          scope: punctuation.definition.string.end.mermaid
          pop: true
